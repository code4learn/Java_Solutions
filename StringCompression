// Implement a method to perform basic string compression using the counts of repeated characters.
// For example, the string aabcccccaaa would become a2blc5a3. If the "compressed" string would not
// become smaller than the orig- inal string, your method should return the original string.
    
    public String stringCompression(String input ){
        StringBuilder sb = new StringBuilder();
        char[] inputChar = input.toCharArray();

        int count=0;
        char lastChar = ' ';
        for(int i = 0;i<inputChar.length;i++){
            if(lastChar != inputChar[i]){
                if(i ==0){
                    count++;
                    lastChar=inputChar[i];
                    sb.append(inputChar[i]);
                }
                else if(i+1==inputChar.length){
                    sb.append(count);
                    sb.append(inputChar[i]);
                    count=1;
                    sb.append(count);
                    }
                else{
                    lastChar=inputChar[i];
                    sb.append(count);
                    sb.append(inputChar[i]);
                    count=1;
                }
            }
            else{
                count++;
                lastChar=inputChar[i];
            }
        }
        if(count>1 || inputChar.length ==1 ){
            sb.append(count);
        }
        return sb.toString();
    }
